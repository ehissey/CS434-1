// generated by Fast Light User Interface Designer (fluid) version 1.0110

#include "gui.h"

void GUI::cb_DBG_i(Fl_Button*, void*) {
  DBG_cb();
}
void GUI::cb_DBG(Fl_Button* o, void* v) {
  ((GUI*)(o->parent()->user_data()))->cb_DBG_i(o,v);
}

void GUI::cb_Quit_i(Fl_Button*, void*) {
  quit_cb();
}
void GUI::cb_Quit(Fl_Button* o, void* v) {
  ((GUI*)(o->parent()->user_data()))->cb_Quit_i(o,v);
}

void GUI::cb_Pan_i(Fl_Button*, void*) {
  panLeft_cb();
}
void GUI::cb_Pan(Fl_Button* o, void* v) {
  ((GUI*)(o->parent()->user_data()))->cb_Pan_i(o,v);
}

void GUI::cb_Pan1_i(Fl_Button*, void*) {
  panRight_cb();
}
void GUI::cb_Pan1(Fl_Button* o, void* v) {
  ((GUI*)(o->parent()->user_data()))->cb_Pan1_i(o,v);
}

void GUI::cb_Tilt_i(Fl_Button*, void*) {
  tiltLeft_cb();
}
void GUI::cb_Tilt(Fl_Button* o, void* v) {
  ((GUI*)(o->parent()->user_data()))->cb_Tilt_i(o,v);
}

void GUI::cb_Tilt1_i(Fl_Button*, void*) {
  tiltRight_cb();
}
void GUI::cb_Tilt1(Fl_Button* o, void* v) {
  ((GUI*)(o->parent()->user_data()))->cb_Tilt1_i(o,v);
}

void GUI::cb_Roll_i(Fl_Button*, void*) {
  rollForward_cb();
}
void GUI::cb_Roll(Fl_Button* o, void* v) {
  ((GUI*)(o->parent()->user_data()))->cb_Roll_i(o,v);
}

void GUI::cb_Roll1_i(Fl_Button*, void*) {
  rollBackward_cb();
}
void GUI::cb_Roll1(Fl_Button* o, void* v) {
  ((GUI*)(o->parent()->user_data()))->cb_Roll1_i(o,v);
}

void GUI::cb_Trans_i(Fl_Button*, void*) {
  transLeft_cb();
}
void GUI::cb_Trans(Fl_Button* o, void* v) {
  ((GUI*)(o->parent()->user_data()))->cb_Trans_i(o,v);
}

void GUI::cb_Trans1_i(Fl_Button*, void*) {
  transRight_cb();
}
void GUI::cb_Trans1(Fl_Button* o, void* v) {
  ((GUI*)(o->parent()->user_data()))->cb_Trans1_i(o,v);
}

void GUI::cb_Trans2_i(Fl_Button*, void*) {
  transUp_cb();
}
void GUI::cb_Trans2(Fl_Button* o, void* v) {
  ((GUI*)(o->parent()->user_data()))->cb_Trans2_i(o,v);
}

void GUI::cb_Trans3_i(Fl_Button*, void*) {
  transDown_cb();
}
void GUI::cb_Trans3(Fl_Button* o, void* v) {
  ((GUI*)(o->parent()->user_data()))->cb_Trans3_i(o,v);
}

void GUI::cb_Trans4_i(Fl_Button*, void*) {
  transForward_cb();
}
void GUI::cb_Trans4(Fl_Button* o, void* v) {
  ((GUI*)(o->parent()->user_data()))->cb_Trans4_i(o,v);
}

void GUI::cb_Trans5_i(Fl_Button*, void*) {
  transBackward_cb();
}
void GUI::cb_Trans5(Fl_Button* o, void* v) {
  ((GUI*)(o->parent()->user_data()))->cb_Trans5_i(o,v);
}

void GUI::cb_Zoom_i(Fl_Button*, void*) {
  zoomIn_cb();
}
void GUI::cb_Zoom(Fl_Button* o, void* v) {
  ((GUI*)(o->parent()->user_data()))->cb_Zoom_i(o,v);
}

void GUI::cb_Zoom1_i(Fl_Button*, void*) {
  zoomOut_cb();
}
void GUI::cb_Zoom1(Fl_Button* o, void* v) {
  ((GUI*)(o->parent()->user_data()))->cb_Zoom1_i(o,v);
}

void GUI::cb_Rot_i(Fl_Button*, void*) {
  rotObjX_cb();
}
void GUI::cb_Rot(Fl_Button* o, void* v) {
  ((GUI*)(o->parent()->user_data()))->cb_Rot_i(o,v);
}

void GUI::cb_Rot1_i(Fl_Button*, void*) {
  rotObjY_cb();
}
void GUI::cb_Rot1(Fl_Button* o, void* v) {
  ((GUI*)(o->parent()->user_data()))->cb_Rot1_i(o,v);
}

void GUI::cb_Rot2_i(Fl_Button*, void*) {
  rotObjZ_cb();
}
void GUI::cb_Rot2(Fl_Button* o, void* v) {
  ((GUI*)(o->parent()->user_data()))->cb_Rot2_i(o,v);
}

void GUI::cb_Wireframe_i(Fl_Button*, void*) {
  wireframeOn_cb();
}
void GUI::cb_Wireframe(Fl_Button* o, void* v) {
  ((GUI*)(o->parent()->user_data()))->cb_Wireframe_i(o,v);
}

void GUI::cb_Wireframe1_i(Fl_Button*, void*) {
  wireframeOff_cb();
}
void GUI::cb_Wireframe1(Fl_Button* o, void* v) {
  ((GUI*)(o->parent()->user_data()))->cb_Wireframe1_i(o,v);
}

void GUI::cb_Save_i(Fl_Button*, void*) {
  saveCam1_cb();
}
void GUI::cb_Save(Fl_Button* o, void* v) {
  ((GUI*)(o->parent()->user_data()))->cb_Save_i(o,v);
}

void GUI::cb_Load_i(Fl_Button*, void*) {
  loadCam1_cb();
}
void GUI::cb_Load(Fl_Button* o, void* v) {
  ((GUI*)(o->parent()->user_data()))->cb_Load_i(o,v);
}

void GUI::cb_Load1_i(Fl_Button*, void*) {
  loadCam2_cb();
}
void GUI::cb_Load1(Fl_Button* o, void* v) {
  ((GUI*)(o->parent()->user_data()))->cb_Load1_i(o,v);
}

void GUI::cb_Save1_i(Fl_Button*, void*) {
  saveCam2_cb();
}
void GUI::cb_Save1(Fl_Button* o, void* v) {
  ((GUI*)(o->parent()->user_data()))->cb_Save1_i(o,v);
}

void GUI::cb_Go_i(Fl_Button*, void*) {
  goToCam1_cb();
}
void GUI::cb_Go(Fl_Button* o, void* v) {
  ((GUI*)(o->parent()->user_data()))->cb_Go_i(o,v);
}

void GUI::cb_Go1_i(Fl_Button*, void*) {
  goToCam2_cb();
}
void GUI::cb_Go1(Fl_Button* o, void* v) {
  ((GUI*)(o->parent()->user_data()))->cb_Go1_i(o,v);
}

void GUI::cb_Gouraud_i(Fl_Button*, void*) {
  gouraud_cb();
}
void GUI::cb_Gouraud(Fl_Button* o, void* v) {
  ((GUI*)(o->parent()->user_data()))->cb_Gouraud_i(o,v);
}

void GUI::cb_Phong_i(Fl_Button*, void*) {
  phong_cb();
}
void GUI::cb_Phong(Fl_Button* o, void* v) {
  ((GUI*)(o->parent()->user_data()))->cb_Phong_i(o,v);
}

void GUI::cb_Light_i(Fl_Button*, void*) {
  lightLeft_cb();
}
void GUI::cb_Light(Fl_Button* o, void* v) {
  ((GUI*)(o->parent()->user_data()))->cb_Light_i(o,v);
}

void GUI::cb_Light1_i(Fl_Button*, void*) {
  lightRight_cb();
}
void GUI::cb_Light1(Fl_Button* o, void* v) {
  ((GUI*)(o->parent()->user_data()))->cb_Light1_i(o,v);
}

void GUI::cb_Light2_i(Fl_Button*, void*) {
  lightUp_cb();
}
void GUI::cb_Light2(Fl_Button* o, void* v) {
  ((GUI*)(o->parent()->user_data()))->cb_Light2_i(o,v);
}

void GUI::cb_Light3_i(Fl_Button*, void*) {
  lightDown_cb();
}
void GUI::cb_Light3(Fl_Button* o, void* v) {
  ((GUI*)(o->parent()->user_data()))->cb_Light3_i(o,v);
}

void GUI::cb_Light4_i(Fl_Button*, void*) {
  lightForward_cb();
}
void GUI::cb_Light4(Fl_Button* o, void* v) {
  ((GUI*)(o->parent()->user_data()))->cb_Light4_i(o,v);
}

void GUI::cb_Light5_i(Fl_Button*, void*) {
  lightBackward_cb();
}
void GUI::cb_Light5(Fl_Button* o, void* v) {
  ((GUI*)(o->parent()->user_data()))->cb_Light5_i(o,v);
}

void GUI::cb_Set_i(Fl_Button*, void*) {
  setAmbient_cb();
}
void GUI::cb_Set(Fl_Button* o, void* v) {
  ((GUI*)(o->parent()->user_data()))->cb_Set_i(o,v);
}

void GUI::cb_Set1_i(Fl_Button*, void*) {
  setExponent_cb();
}
void GUI::cb_Set1(Fl_Button* o, void* v) {
  ((GUI*)(o->parent()->user_data()))->cb_Set1_i(o,v);
}

void GUI::cb_Ref_i(Fl_Button*, void*) {
  refPanLeft_cb();
}
void GUI::cb_Ref(Fl_Button* o, void* v) {
  ((GUI*)(o->parent()->user_data()))->cb_Ref_i(o,v);
}

void GUI::cb_Ref1_i(Fl_Button*, void*) {
  refPanRight_cb();
}
void GUI::cb_Ref1(Fl_Button* o, void* v) {
  ((GUI*)(o->parent()->user_data()))->cb_Ref1_i(o,v);
}

void GUI::cb_Ref2_i(Fl_Button*, void*) {
  refTiltLeft_cb();
}
void GUI::cb_Ref2(Fl_Button* o, void* v) {
  ((GUI*)(o->parent()->user_data()))->cb_Ref2_i(o,v);
}

void GUI::cb_Ref3_i(Fl_Button*, void*) {
  refTiltRight_cb();
}
void GUI::cb_Ref3(Fl_Button* o, void* v) {
  ((GUI*)(o->parent()->user_data()))->cb_Ref3_i(o,v);
}

void GUI::cb_Ref4_i(Fl_Button*, void*) {
  refRollForward_cb();
}
void GUI::cb_Ref4(Fl_Button* o, void* v) {
  ((GUI*)(o->parent()->user_data()))->cb_Ref4_i(o,v);
}

void GUI::cb_Ref5_i(Fl_Button*, void*) {
  refRollBackward_cb();
}
void GUI::cb_Ref5(Fl_Button* o, void* v) {
  ((GUI*)(o->parent()->user_data()))->cb_Ref5_i(o,v);
}

void GUI::cb_Ref6_i(Fl_Button*, void*) {
  refTransLeft_cb();
}
void GUI::cb_Ref6(Fl_Button* o, void* v) {
  ((GUI*)(o->parent()->user_data()))->cb_Ref6_i(o,v);
}

void GUI::cb_Ref7_i(Fl_Button*, void*) {
  refTransRight_cb();
}
void GUI::cb_Ref7(Fl_Button* o, void* v) {
  ((GUI*)(o->parent()->user_data()))->cb_Ref7_i(o,v);
}

void GUI::cb_Ref8_i(Fl_Button*, void*) {
  refTransUp_cb();
}
void GUI::cb_Ref8(Fl_Button* o, void* v) {
  ((GUI*)(o->parent()->user_data()))->cb_Ref8_i(o,v);
}

void GUI::cb_Ref9_i(Fl_Button*, void*) {
  refTransDown_cb();
}
void GUI::cb_Ref9(Fl_Button* o, void* v) {
  ((GUI*)(o->parent()->user_data()))->cb_Ref9_i(o,v);
}

void GUI::cb_Refa_i(Fl_Button*, void*) {
  refTransForward_cb();
}
void GUI::cb_Refa(Fl_Button* o, void* v) {
  ((GUI*)(o->parent()->user_data()))->cb_Refa_i(o,v);
}

void GUI::cb_Refb_i(Fl_Button*, void*) {
  refTransBackward_cb();
}
void GUI::cb_Refb(Fl_Button* o, void* v) {
  ((GUI*)(o->parent()->user_data()))->cb_Refb_i(o,v);
}

void GUI::cb_Refc_i(Fl_Button*, void*) {
  refZoomIn_cb();
}
void GUI::cb_Refc(Fl_Button* o, void* v) {
  ((GUI*)(o->parent()->user_data()))->cb_Refc_i(o,v);
}

void GUI::cb_Refd_i(Fl_Button*, void*) {
  refZoomOut_cb();
}
void GUI::cb_Refd(Fl_Button* o, void* v) {
  ((GUI*)(o->parent()->user_data()))->cb_Refd_i(o,v);
}

void GUI::cb_Refe_i(Fl_Button*, void*) {
  refGoToCam1_cb();
}
void GUI::cb_Refe(Fl_Button* o, void* v) {
  ((GUI*)(o->parent()->user_data()))->cb_Refe_i(o,v);
}

void GUI::cb_Reff_i(Fl_Button*, void*) {
  refGoToCam2_cb();
}
void GUI::cb_Reff(Fl_Button* o, void* v) {
  ((GUI*)(o->parent()->user_data()))->cb_Reff_i(o,v);
}

void GUI::cb_Ref10_i(Fl_Button*, void*) {
  refSaveCam1_cb();
}
void GUI::cb_Ref10(Fl_Button* o, void* v) {
  ((GUI*)(o->parent()->user_data()))->cb_Ref10_i(o,v);
}

void GUI::cb_Ref11_i(Fl_Button*, void*) {
  refLoadCam1_cb();
}
void GUI::cb_Ref11(Fl_Button* o, void* v) {
  ((GUI*)(o->parent()->user_data()))->cb_Ref11_i(o,v);
}

void GUI::cb_Ref12_i(Fl_Button*, void*) {
  refLoadCam2_cb();
}
void GUI::cb_Ref12(Fl_Button* o, void* v) {
  ((GUI*)(o->parent()->user_data()))->cb_Ref12_i(o,v);
}

void GUI::cb_Ref13_i(Fl_Button*, void*) {
  refSaveCam2_cb();
}
void GUI::cb_Ref13(Fl_Button* o, void* v) {
  ((GUI*)(o->parent()->user_data()))->cb_Ref13_i(o,v);
}

void GUI::cb_Real_i(Fl_Button*, void*) {
  real_cb();
}
void GUI::cb_Real(Fl_Button* o, void* v) {
  ((GUI*)(o->parent()->user_data()))->cb_Real_i(o,v);
}

void GUI::cb_Virtual_i(Fl_Button*, void*) {
  virtual_cb();
}
void GUI::cb_Virtual(Fl_Button* o, void* v) {
  ((GUI*)(o->parent()->user_data()))->cb_Virtual_i(o,v);
}

void GUI::cb_Effect_i(Fl_Button*, void*) {
  effectOne_cb();
}
void GUI::cb_Effect(Fl_Button* o, void* v) {
  ((GUI*)(o->parent()->user_data()))->cb_Effect_i(o,v);
}

void GUI::cb_Effect1_i(Fl_Button*, void*) {
  effectTwo_cb();
}
void GUI::cb_Effect1(Fl_Button* o, void* v) {
  ((GUI*)(o->parent()->user_data()))->cb_Effect1_i(o,v);
}

void GUI::cb_No_i(Fl_Button*, void*) {
  noEffect_cb();
}
void GUI::cb_No(Fl_Button* o, void* v) {
  ((GUI*)(o->parent()->user_data()))->cb_No_i(o,v);
}
#include "scene.h"
#include <string>
#include <stdlib.h>

GUI::GUI() {
  { uiw = new Fl_Double_Window(824, 679, "GUI");
    uiw->user_data((void*)(this));
    uiw->align(FL_ALIGN_CENTER);
    { Fl_Button* o = new Fl_Button(5, 635, 95, 40, "DBG");
      o->selection_color((Fl_Color)FL_DARK_RED);
      o->callback((Fl_Callback*)cb_DBG);
    } // Fl_Button* o
    { Fl_Button* o = new Fl_Button(105, 635, 95, 40, "Quit");
      o->callback((Fl_Callback*)cb_Quit);
    } // Fl_Button* o
    { Fl_Button* o = new Fl_Button(5, 55, 95, 45, "Pan Left");
      o->callback((Fl_Callback*)cb_Pan);
    } // Fl_Button* o
    { Fl_Button* o = new Fl_Button(105, 55, 95, 45, "Pan Right");
      o->callback((Fl_Callback*)cb_Pan1);
    } // Fl_Button* o
    { Fl_Button* o = new Fl_Button(5, 105, 95, 45, "Tilt Left");
      o->callback((Fl_Callback*)cb_Tilt);
    } // Fl_Button* o
    { Fl_Button* o = new Fl_Button(105, 105, 95, 45, "Tilt Right");
      o->callback((Fl_Callback*)cb_Tilt1);
    } // Fl_Button* o
    { Fl_Button* o = new Fl_Button(5, 155, 95, 45, "Roll Forward");
      o->labelsize(12);
      o->callback((Fl_Callback*)cb_Roll);
    } // Fl_Button* o
    { Fl_Button* o = new Fl_Button(105, 155, 95, 45, "Roll Backward");
      o->labelsize(12);
      o->callback((Fl_Callback*)cb_Roll1);
    } // Fl_Button* o
    { Fl_Button* o = new Fl_Button(205, 55, 95, 45, "Trans Left");
      o->callback((Fl_Callback*)cb_Trans);
    } // Fl_Button* o
    { Fl_Button* o = new Fl_Button(305, 55, 95, 45, "Trans Right");
      o->callback((Fl_Callback*)cb_Trans1);
    } // Fl_Button* o
    { Fl_Button* o = new Fl_Button(205, 105, 95, 45, "Trans Up");
      o->callback((Fl_Callback*)cb_Trans2);
    } // Fl_Button* o
    { Fl_Button* o = new Fl_Button(305, 105, 95, 45, "Trans Down");
      o->callback((Fl_Callback*)cb_Trans3);
    } // Fl_Button* o
    { Fl_Button* o = new Fl_Button(205, 155, 95, 45, "Trans Forward");
      o->labelsize(12);
      o->callback((Fl_Callback*)cb_Trans4);
    } // Fl_Button* o
    { Fl_Button* o = new Fl_Button(305, 155, 95, 45, "Trans Backward");
      o->labelsize(12);
      o->callback((Fl_Callback*)cb_Trans5);
    } // Fl_Button* o
    { Fl_Button* o = new Fl_Button(205, 5, 95, 45, "Zoom In");
      o->callback((Fl_Callback*)cb_Zoom);
    } // Fl_Button* o
    { Fl_Button* o = new Fl_Button(305, 5, 95, 45, "Zoom Out");
      o->callback((Fl_Callback*)cb_Zoom1);
    } // Fl_Button* o
    { scaleFactor = new Fl_Input(100, 5, 100, 45, "Scale Factor");
    } // Fl_Input* scaleFactor
    { Fl_Button* o = new Fl_Button(5, 205, 95, 45, "Rot Obj X");
      o->callback((Fl_Callback*)cb_Rot);
    } // Fl_Button* o
    { Fl_Button* o = new Fl_Button(105, 205, 95, 45, "Rot Obj Y");
      o->callback((Fl_Callback*)cb_Rot1);
    } // Fl_Button* o
    { Fl_Button* o = new Fl_Button(205, 205, 95, 45, "Rot Obj Z");
      o->callback((Fl_Callback*)cb_Rot2);
    } // Fl_Button* o
    { Fl_Button* o = new Fl_Button(305, 205, 95, 45, "Wireframe On");
      o->callback((Fl_Callback*)cb_Wireframe);
    } // Fl_Button* o
    { Fl_Button* o = new Fl_Button(305, 255, 95, 45, "Wireframe Off");
      o->callback((Fl_Callback*)cb_Wireframe1);
    } // Fl_Button* o
    { Fl_Button* o = new Fl_Button(5, 255, 95, 45, "Save Cam 1");
      o->callback((Fl_Callback*)cb_Save);
    } // Fl_Button* o
    { Fl_Button* o = new Fl_Button(105, 255, 95, 45, "Load Cam 1");
      o->callback((Fl_Callback*)cb_Load);
    } // Fl_Button* o
    { Fl_Button* o = new Fl_Button(105, 305, 95, 45, "Load Cam 2");
      o->callback((Fl_Callback*)cb_Load1);
    } // Fl_Button* o
    { Fl_Button* o = new Fl_Button(5, 305, 95, 45, "Save Cam 2");
      o->callback((Fl_Callback*)cb_Save1);
    } // Fl_Button* o
    { Fl_Button* o = new Fl_Button(205, 255, 95, 45, "Go To Cam 1");
      o->callback((Fl_Callback*)cb_Go);
    } // Fl_Button* o
    { Fl_Button* o = new Fl_Button(205, 305, 95, 45, "Go To Cam 2");
      o->callback((Fl_Callback*)cb_Go1);
    } // Fl_Button* o
    { Fl_Button* o = new Fl_Button(420, 5, 95, 45, "Gouraud");
      o->callback((Fl_Callback*)cb_Gouraud);
    } // Fl_Button* o
    { Fl_Button* o = new Fl_Button(520, 5, 95, 45, "Phong");
      o->callback((Fl_Callback*)cb_Phong);
    } // Fl_Button* o
    { Fl_Button* o = new Fl_Button(420, 105, 95, 45, "Light Left");
      o->callback((Fl_Callback*)cb_Light);
    } // Fl_Button* o
    { Fl_Button* o = new Fl_Button(520, 105, 95, 45, "Light Right");
      o->callback((Fl_Callback*)cb_Light1);
    } // Fl_Button* o
    { Fl_Button* o = new Fl_Button(620, 105, 95, 45, "Light Up");
      o->callback((Fl_Callback*)cb_Light2);
    } // Fl_Button* o
    { Fl_Button* o = new Fl_Button(720, 105, 95, 45, "Light Down");
      o->callback((Fl_Callback*)cb_Light3);
    } // Fl_Button* o
    { Fl_Button* o = new Fl_Button(420, 155, 95, 45, "Light Forward");
      o->callback((Fl_Callback*)cb_Light4);
    } // Fl_Button* o
    { Fl_Button* o = new Fl_Button(520, 155, 95, 45, "Light Backward");
      o->labelsize(13);
      o->callback((Fl_Callback*)cb_Light5);
    } // Fl_Button* o
    { Fl_Button* o = new Fl_Button(420, 55, 95, 45, "Set Ambient");
      o->callback((Fl_Callback*)cb_Set);
    } // Fl_Button* o
    { Fl_Button* o = new Fl_Button(620, 55, 95, 45, "Set Exponent");
      o->callback((Fl_Callback*)cb_Set1);
    } // Fl_Button* o
    { ambientInput = new Fl_Input(540, 55, 50, 40);
    } // Fl_Input* ambientInput
    { exponentInput = new Fl_Input(740, 55, 50, 40);
    } // Fl_Input* exponentInput
    { Fl_Button* o = new Fl_Button(420, 255, 95, 45, "Ref Pan Left");
      o->callback((Fl_Callback*)cb_Ref);
    } // Fl_Button* o
    { Fl_Button* o = new Fl_Button(520, 255, 95, 45, "Ref Pan Right");
      o->callback((Fl_Callback*)cb_Ref1);
    } // Fl_Button* o
    { Fl_Button* o = new Fl_Button(420, 305, 95, 45, "Ref Tilt Left");
      o->callback((Fl_Callback*)cb_Ref2);
    } // Fl_Button* o
    { Fl_Button* o = new Fl_Button(520, 305, 95, 45, "Ref Tilt Right");
      o->callback((Fl_Callback*)cb_Ref3);
    } // Fl_Button* o
    { Fl_Button* o = new Fl_Button(420, 355, 95, 45, "Ref Roll Forward");
      o->labelsize(11);
      o->callback((Fl_Callback*)cb_Ref4);
    } // Fl_Button* o
    { Fl_Button* o = new Fl_Button(520, 355, 95, 45, "Ref Roll Backward");
      o->labelsize(11);
      o->callback((Fl_Callback*)cb_Ref5);
    } // Fl_Button* o
    { Fl_Button* o = new Fl_Button(620, 255, 95, 45, "Ref Trans Left");
      o->labelsize(13);
      o->callback((Fl_Callback*)cb_Ref6);
    } // Fl_Button* o
    { Fl_Button* o = new Fl_Button(720, 255, 95, 45, "Ref Trans Right");
      o->labelsize(13);
      o->callback((Fl_Callback*)cb_Ref7);
    } // Fl_Button* o
    { Fl_Button* o = new Fl_Button(620, 305, 95, 45, "Ref Trans Up");
      o->callback((Fl_Callback*)cb_Ref8);
    } // Fl_Button* o
    { Fl_Button* o = new Fl_Button(720, 305, 95, 45, "Ref Trans Down");
      o->labelsize(13);
      o->callback((Fl_Callback*)cb_Ref9);
    } // Fl_Button* o
    { Fl_Button* o = new Fl_Button(620, 355, 95, 45, "Ref Trans Forward");
      o->labelsize(11);
      o->callback((Fl_Callback*)cb_Refa);
    } // Fl_Button* o
    { Fl_Button* o = new Fl_Button(720, 355, 95, 45, "Ref Trans Backward");
      o->labelsize(10);
      o->callback((Fl_Callback*)cb_Refb);
    } // Fl_Button* o
    { Fl_Button* o = new Fl_Button(620, 205, 95, 45, "Ref Zoom In");
      o->callback((Fl_Callback*)cb_Refc);
    } // Fl_Button* o
    { Fl_Button* o = new Fl_Button(720, 205, 95, 45, "Ref Zoom Out");
      o->callback((Fl_Callback*)cb_Refd);
    } // Fl_Button* o
    { Fl_Button* o = new Fl_Button(620, 405, 95, 45, "Ref Go To Cam 1");
      o->labelsize(11);
      o->callback((Fl_Callback*)cb_Refe);
    } // Fl_Button* o
    { Fl_Button* o = new Fl_Button(620, 455, 95, 45, "Ref Go To Cam 2");
      o->labelsize(11);
      o->callback((Fl_Callback*)cb_Reff);
    } // Fl_Button* o
    { Fl_Button* o = new Fl_Button(420, 405, 95, 45, "Ref Save Cam 1");
      o->labelsize(12);
      o->callback((Fl_Callback*)cb_Ref10);
    } // Fl_Button* o
    { Fl_Button* o = new Fl_Button(520, 405, 95, 45, "Ref Load Cam 1");
      o->labelsize(12);
      o->callback((Fl_Callback*)cb_Ref11);
    } // Fl_Button* o
    { Fl_Button* o = new Fl_Button(520, 455, 95, 45, "Ref Load Cam 2");
      o->labelsize(12);
      o->callback((Fl_Callback*)cb_Ref12);
    } // Fl_Button* o
    { Fl_Button* o = new Fl_Button(420, 455, 95, 45, "Ref Save Cam 2");
      o->labelsize(12);
      o->callback((Fl_Callback*)cb_Ref13);
    } // Fl_Button* o
    { refScaleFactor = new Fl_Input(515, 205, 100, 45, "Ref Scale Factor");
      refScaleFactor->labelsize(12);
    } // Fl_Input* refScaleFactor
    { Fl_Button* o = new Fl_Button(5, 500, 95, 40, "Real");
      o->selection_color((Fl_Color)FL_DARK_RED);
      o->callback((Fl_Callback*)cb_Real);
    } // Fl_Button* o
    { Fl_Button* o = new Fl_Button(105, 500, 95, 40, "Virtual");
      o->selection_color((Fl_Color)FL_DARK_RED);
      o->callback((Fl_Callback*)cb_Virtual);
    } // Fl_Button* o
    { Fl_Button* o = new Fl_Button(105, 545, 95, 40, "Effect One");
      o->selection_color((Fl_Color)FL_DARK_RED);
      o->callback((Fl_Callback*)cb_Effect);
    } // Fl_Button* o
    { Fl_Button* o = new Fl_Button(205, 545, 95, 40, "Effect Two");
      o->selection_color((Fl_Color)FL_DARK_RED);
      o->callback((Fl_Callback*)cb_Effect1);
    } // Fl_Button* o
    { Fl_Button* o = new Fl_Button(5, 545, 95, 40, "No Effect");
      o->selection_color((Fl_Color)FL_DARK_RED);
      o->callback((Fl_Callback*)cb_No);
    } // Fl_Button* o
    uiw->end();
  } // Fl_Double_Window* uiw
}

int main(int argc, char **argv) {
  scene = new Scene;
  return Fl::run();
}

void GUI::show() {
  uiw->show();
}

void GUI::DBG_cb() {
  scene->DBG();
}

void GUI::quit_cb() {
  scene->quit();
}

void GUI::panLeft_cb() {
  scene->ppc->Pan(atof(scaleFactor->value()));
  scene->Render();
}

void GUI::panRight_cb() {
  scene->ppc->Pan(-atof(scaleFactor->value()));
  scene->Render();
}

void GUI::tiltLeft_cb() {
  scene->ppc->Tilt(atof(scaleFactor->value()));
  scene->Render();
}

void GUI::tiltRight_cb() {
  scene->ppc->Tilt(-atof(scaleFactor->value()));
  scene->Render();
}

void GUI::rollForward_cb() {
  scene->ppc->Roll(atof(scaleFactor->value()));
  scene->Render();
}

void GUI::rollBackward_cb() {
  scene->ppc->Roll(-atof(scaleFactor->value()));
  scene->Render();
}

void GUI::transLeft_cb() {
  scene->ppc->Translate('l', atof(scaleFactor->value()));
  scene->Render();
}

void GUI::transRight_cb() {
  scene->ppc->Translate('r', atof(scaleFactor->value()));
  scene->Render();
}

void GUI::transUp_cb() {
  scene->ppc->Translate('u', atof(scaleFactor->value()));
  scene->Render();
}

void GUI::transDown_cb() {
  scene->ppc->Translate('d', atof(scaleFactor->value()));
  scene->Render();
}

void GUI::transForward_cb() {
  scene->ppc->Translate('f', atof(scaleFactor->value()));
  scene->Render();
}

void GUI::transBackward_cb() {
  scene->ppc->Translate('b', atof(scaleFactor->value()));
  scene->Render();
}

void GUI::zoomIn_cb() {
  scene->ppc->zoom(atof(scaleFactor->value()),'i');
  scene->Render();
}

void GUI::zoomOut_cb() {
  scene->ppc->zoom(atof(scaleFactor->value()),'o');
  scene->Render();
}

void GUI::rotObjX_cb() {
  scene->currGuiObject->Rotate(scene->currGuiObject->GetCenter(), Vector3D(1.0f, 0.0f, 0.0f), atof(scaleFactor->value()));
  scene->Render();
}

void GUI::rotObjY_cb() {
  scene->currGuiObject->Rotate(scene->currGuiObject->GetCenter(), Vector3D(0.0f, 1.0f, 0.0f), atof(scaleFactor->value()));
  scene->Render();
}

void GUI::rotObjZ_cb() {
  scene->currGuiObject->Rotate(scene->currGuiObject->GetCenter(), Vector3D(0.0f, 0.0f, 1.0f), atof(scaleFactor->value()));
  scene->Render();
}

void GUI::wireframeOn_cb() {
  scene->wireframe = true;
  scene->Render();
}

void GUI::wireframeOff_cb() {
  scene->wireframe = false;
  scene->Render();
}

void GUI::saveCam1_cb() {
  scene->SaveView0();
}

void GUI::loadCam1_cb() {
  scene->LoadView0();
}

void GUI::saveCam2_cb() {
  scene->SaveView1();
}

void GUI::loadCam2_cb() {
  scene->LoadView1();
}

void GUI::goToCam1_cb() {
  scene->GoToView0();
}

void GUI::goToCam2_cb() {
  scene->GoToView1();
}

void GUI::gouraud_cb() {
  scene->setGouraud();
}

void GUI::phong_cb() {
  scene->setPhong();
}

void GUI::lightLeft_cb() {
  scene->lightLeft();
}

void GUI::lightRight_cb() {
  scene->lightRight();
}

void GUI::lightUp_cb() {
  scene->lightUp();
}

void GUI::lightDown_cb() {
  scene->lightDown();
}

void GUI::lightForward_cb() {
  scene->lightForward();
}

void GUI::lightBackward_cb() {
  scene->lightBackward();
}

void GUI::setAmbient_cb() {
  scene->setAmbient(ambientInput->value());
}

void GUI::setExponent_cb() {
  scene->setExponent(exponentInput->value());
}

void GUI::refPanLeft_cb() {
  if(scene->refPPC)
  scene->refPPC->Pan(atof(refScaleFactor->value()));
  scene->Render();
}

void GUI::refPanRight_cb() {
  if(scene->refPPC)
  scene->refPPC->Pan(-atof(refScaleFactor->value()));
  scene->Render();
}

void GUI::refTiltLeft_cb() {
  if(scene->refPPC)
  scene->refPPC->Tilt(atof(refScaleFactor->value()));
  scene->Render();
}

void GUI::refTiltRight_cb() {
  if(scene->refPPC)
  scene->refPPC->Tilt(-atof(refScaleFactor->value()));
  scene->Render();
}

void GUI::refRollForward_cb() {
  if(scene->refPPC)
  scene->refPPC->Roll(atof(refScaleFactor->value()));
  scene->Render();
}

void GUI::refRollBackward_cb() {
  if(scene->refPPC)
  scene->refPPC->Roll(-atof(refScaleFactor->value()));
  scene->Render();
}

void GUI::refTransLeft_cb() {
  if(scene->refPPC)
  scene->refPPC->Translate('l', atof(refScaleFactor->value()));
  scene->Render();
}

void GUI::refTransRight_cb() {
  if(scene->refPPC)
  scene->refPPC->Translate('r', atof(refScaleFactor->value()));
  scene->Render();
}

void GUI::refTransUp_cb() {
  if(scene->refPPC)
  scene->refPPC->Translate('u', atof(refScaleFactor->value()));
  scene->Render();
}

void GUI::refTransDown_cb() {
  if(scene->refPPC)
  scene->refPPC->Translate('d', atof(refScaleFactor->value()));
  scene->Render();
}

void GUI::refTransForward_cb() {
  if(scene->refPPC)
  scene->refPPC->Translate('f', atof(refScaleFactor->value()));
  scene->Render();
}

void GUI::refTransBackward_cb() {
  if(scene->refPPC)
  scene->refPPC->Translate('b', atof(refScaleFactor->value()));
  scene->Render();
}

void GUI::refZoomIn_cb() {
  if(scene->refPPC)
  scene->refPPC->zoom(atof(refScaleFactor->value()),'i');
  scene->Render();
}

void GUI::refZoomOut_cb() {
  if(scene->refPPC)
  scene->refPPC->zoom(atof(refScaleFactor->value()),'o');
  scene->Render();
}

void GUI::refGoToCam1_cb() {
  scene->RefGoToView0();
}

void GUI::refGoToCam2_cb() {
  scene->RefGoToView1();
}

void GUI::refSaveCam1_cb() {
  scene->RefSaveView0();
}

void GUI::refLoadCam1_cb() {
  scene->RefLoadView0();
}

void GUI::refSaveCam2_cb() {
  scene->RefSaveView1();
}

void GUI::refLoadCam2_cb() {
  scene->RefLoadView1();
}

void GUI::real_cb() {
  scene->setPSReal();
}

void GUI::virtual_cb() {
  scene->setPSVirtual();
}

void GUI::effectOne_cb() {
  scene->setPSEffect(1);
}

void GUI::effectTwo_cb() {
  scene->setPSEffect(2);
}

void GUI::noEffect_cb() {
  scene->setPSEffect(0);
}
